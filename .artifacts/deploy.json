{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.18.56646",
      "templateHash": "16964525639741099696"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "quote",
      "metadata": {
        "description": "A prefix to use for all resource names"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to deploy resources to, by default this is the resource group location"
      }
    },
    "email": {
      "type": "string",
      "defaultValue": "noreply@microsoft.com",
      "metadata": {
        "description": "Email address to use for API-M"
      }
    },
    "funcZipDeploy": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Location of the Zip file to deploy onto the Azure Function"
      }
    }
  },
  "variables": {
    "uniqueName": "[format('{0}{1}', parameters('prefix'), uniqueString(parameters('prefix'), resourceGroup().id))]",
    "compactLocation": "[replace(parameters('location'), ' ', '')]",
    "sharedHeader": "[guid(resourceGroup().id)]",
    "databaseName": "quotes",
    "databaseThroughput": 400,
    "collectionName": "quoteresponses",
    "partitionKey": "/RequestID",
    "uniqueKey": "/ResponseID",
    "documentTtl": 300,
    "backendName": "quoteFunctions",
    "apiPolicy": "[format('<policies>\r\n<inbound>\r\n  <base />\r\n  <set-backend-service backend-id=\"{0}\" />\r\n  <set-header name=\"Ocp-Apim-Subscription-Key\" exists-action=\"delete\" />\r\n  <set-header name=\"X-Azure-FDID\" exists-action=\"override\">\r\n    <value>{1}</value>\r\n  </set-header>\r\n</inbound>\r\n<backend>\r\n    <base />\r\n</backend>\r\n<outbound>\r\n    <base />\r\n</outbound>\r\n<on-error>\r\n    <base />\r\n</on-error>\r\n</policies>\r\n', variables('backendName'), variables('sharedHeader'))]"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-11-15-preview",
      "name": "[format('{0}/{1}/{2}', variables('uniqueName'), variables('databaseName'), variables('collectionName'))]",
      "properties": {
        "resource": {
          "id": "[variables('collectionName')]",
          "defaultTtl": "[variables('documentTtl')]",
          "partitionKey": {
            "paths": [
              "[variables('partitionKey')]"
            ],
            "kind": "Hash"
          },
          "uniqueKeyPolicy": {
            "uniqueKeys": [
              {
                "paths": [
                  "[variables('uniqueKey')]"
                ]
              }
            ]
          },
          "indexingPolicy": {
            "automatic": true,
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": []
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('uniqueName'), variables('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-11-15-preview",
      "name": "[format('{0}/{1}', variables('uniqueName'), variables('databaseName'))]",
      "properties": {
        "resource": {
          "id": "[variables('databaseName')]"
        },
        "options": {
          "throughput": "[variables('databaseThroughput')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', variables('uniqueName'), 'quoteapi', 'policy')]",
      "properties": {
        "format": "rawxml",
        "value": "[variables('apiPolicy')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('uniqueName'), 'quoteapi')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', variables('uniqueName'), 'quoteapi', 'QuoteSchema')]",
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "requestQuoteResponse": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "requestedAt": {
                    "type": "string"
                  }
                }
              },
              "queryQuoteResponse": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "requestID": {
                      "type": "string"
                    },
                    "responseID": {
                      "type": "string"
                    },
                    "providerName": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "providedAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('uniqueName'), 'quoteapi')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', variables('uniqueName'), 'quoteapi', 'requestquote')]",
      "properties": {
        "displayName": "Request Quote",
        "method": "post",
        "urlTemplate": "/",
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "QuoteSchema",
                "typeName": "requestQuoteResponse"
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('uniqueName'), 'quoteapi')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', variables('uniqueName'), 'quoteapi', 'QuoteSchema')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', variables('uniqueName'), 'quoteapi', 'queryquote')]",
      "properties": {
        "displayName": "Query Quote",
        "method": "get",
        "urlTemplate": "/{id}",
        "templateParameters": [
          {
            "name": "id",
            "type": "string"
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "QuoteSchema",
                "typeName": "queryQuoteResponse"
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', variables('uniqueName'), 'quoteapi')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', variables('uniqueName'), 'quoteapi', 'QuoteSchema')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/loggers",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', variables('uniqueName'), 'appinsights')]",
      "properties": {
        "loggerType": "applicationInsights",
        "credentials": {
          "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('uniqueName'))).InstrumentationKey]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('uniqueName'))]",
        "[resourceId('Microsoft.Insights/components', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/namedValues",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', variables('uniqueName'), 'QuoteFunctionsKey')]",
      "properties": {
        "displayName": "QuoteFunctionsKey",
        "secret": true,
        "value": "[listKeys(format('{0}/host/default', resourceId('Microsoft.Web/sites', variables('uniqueName'))), '2016-08-01').functionKeys.apimanagement]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('uniqueName'))]",
        "[resourceId('Microsoft.Web/sites', variables('uniqueName'))]",
        "[resourceId('Microsoft.Web/sites/host/functionKeys', split(format('{0}/default/apimanagement', variables('uniqueName')), '/')[0], split(format('{0}/default/apimanagement', variables('uniqueName')), '/')[1], split(format('{0}/default/apimanagement', variables('uniqueName')), '/')[2])]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/backends",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', variables('uniqueName'), variables('backendName'))]",
      "properties": {
        "protocol": "http",
        "url": "[format('https://{0}/api/quote', reference(resourceId('Microsoft.Web/sites', variables('uniqueName'))).defaultHostName)]",
        "resourceId": "[format('https://{0}{1}', environment().resourceManager, resourceId('Microsoft.Web/sites', variables('uniqueName')))]",
        "description": "[variables('backendName')]",
        "credentials": {
          "header": {
            "x-functions-key": [
              "[format('{{{{{0}}}}}', 'QuoteFunctionsKey')]"
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('uniqueName'))]",
        "[resourceId('Microsoft.Web/sites', variables('uniqueName'))]",
        "[resourceId('Microsoft.ApiManagement/service/namedValues', variables('uniqueName'), 'QuoteFunctionsKey')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', variables('uniqueName'), 'quoteapi')]",
      "properties": {
        "displayName": "Quote API",
        "protocols": [
          "https"
        ],
        "path": "api/quote",
        "serviceUrl": "",
        "subscriptionRequired": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-11-15-preview",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[toLower(substring(variables('uniqueName'), 0, min(24, length(variables('uniqueName')))))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('uniqueName'))]",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "sku": {
        "name": "Y1"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('uniqueName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', toLower(substring(variables('uniqueName'), 0, min(24, length(variables('uniqueName'))))), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(substring(variables('uniqueName'), 0, min(24, length(variables('uniqueName')))))), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', toLower(substring(variables('uniqueName'), 0, min(24, length(variables('uniqueName'))))), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(substring(variables('uniqueName'), 0, min(24, length(variables('uniqueName')))))), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('uniqueName'))).InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', variables('uniqueName'))).InstrumentationKey)]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "CosmosDB",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('uniqueName')), '2021-11-15-preview').connectionStrings[0].connectionString]"
            }
          ],
          "ipSecurityRestrictions": [
            {
              "name": "AllowApim",
              "priority": 100,
              "action": "Allow",
              "tag": "ServiceTag",
              "ipAddress": "[format('AzureCloud.{0}', variables('compactLocation'))]",
              "headers": {
                "x-azure-fdid": [
                  "[variables('sharedHeader')]"
                ]
              }
            }
          ]
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('uniqueName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('uniqueName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('uniqueName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', toLower(substring(variables('uniqueName'), 0, min(24, length(variables('uniqueName'))))))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/host/functionKeys",
      "apiVersion": "2018-11-01",
      "name": "[format('{0}/default/apimanagement', variables('uniqueName'))]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('uniqueName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2021-08-01",
      "name": "[variables('uniqueName')]",
      "location": "[parameters('location')]",
      "sku": {
        "capacity": 0,
        "name": "Consumption"
      },
      "properties": {
        "publisherEmail": "[parameters('email')]",
        "publisherName": "[parameters('prefix')]"
      }
    }
  ]
}