{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.18.56646",
      "templateHash": "1484890315101824830"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "quote",
      "metadata": {
        "description": "A prefix to use for all resource names"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to deploy resources to, by default this is the resource group location"
      }
    },
    "email": {
      "type": "string",
      "defaultValue": "noreply@microsoft.com",
      "metadata": {
        "description": "Email address to use for API-M"
      }
    },
    "funcZipDeploy": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/ScottHolden/FanOutQuote/main/.artifacts/function.zip",
      "metadata": {
        "description": "Location of the Zip file to deploy onto the Azure Function, leave empty to skip zip deploy to Function App"
      }
    }
  },
  "variables": {
    "uniqueName": "[format('{0}{1}', parameters('prefix'), uniqueString(parameters('prefix'), resourceGroup().id))]",
    "sharedHeader": "[guid(resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-appinsights', variables('uniqueName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueName": {
            "value": "[variables('uniqueName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "12522901445627024214"
            }
          },
          "parameters": {
            "uniqueName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('uniqueName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('uniqueName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('uniqueName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('uniqueName'))]"
              ]
            }
          ],
          "outputs": {
            "instrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('uniqueName'))).InstrumentationKey]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-cosmosdb', variables('uniqueName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueName": {
            "value": "[variables('uniqueName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "16486655124615285056"
            }
          },
          "parameters": {
            "uniqueName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "databaseName": {
              "type": "string",
              "defaultValue": "quotes"
            },
            "databaseThroughput": {
              "type": "int",
              "defaultValue": 400
            },
            "collectionName": {
              "type": "string",
              "defaultValue": "quoteresponses"
            },
            "partitionKey": {
              "type": "string",
              "defaultValue": "/RequestID"
            },
            "uniqueKey": {
              "type": "string",
              "defaultValue": "/ResponseID"
            },
            "documentTtl": {
              "type": "int",
              "defaultValue": 300
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-11-15-preview",
              "name": "[format('{0}/{1}/{2}', parameters('uniqueName'), parameters('databaseName'), parameters('collectionName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('collectionName')]",
                  "defaultTtl": "[parameters('documentTtl')]",
                  "partitionKey": {
                    "paths": [
                      "[parameters('partitionKey')]"
                    ],
                    "kind": "Hash"
                  },
                  "uniqueKeyPolicy": {
                    "uniqueKeys": [
                      {
                        "paths": [
                          "[parameters('uniqueKey')]"
                        ]
                      }
                    ]
                  },
                  "indexingPolicy": {
                    "automatic": true,
                    "indexingMode": "consistent",
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": []
                  },
                  "conflictResolutionPolicy": {
                    "mode": "LastWriterWins",
                    "conflictResolutionPath": "/_ts"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('uniqueName'), parameters('databaseName'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2021-11-15-preview",
              "name": "[format('{0}/{1}', parameters('uniqueName'), parameters('databaseName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('databaseName')]"
                },
                "options": {
                  "throughput": "[parameters('databaseThroughput')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('uniqueName'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2021-11-15-preview",
              "name": "[parameters('uniqueName')]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                  {
                    "locationName": "[parameters('location')]"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "cosmosdbName": {
              "type": "string",
              "value": "[parameters('uniqueName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-functionapp', variables('uniqueName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueName": {
            "value": "[variables('uniqueName')]"
          },
          "cosmosDBName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-cosmosdb', variables('uniqueName')))).outputs.cosmosdbName.value]"
          },
          "sharedHeader": {
            "value": "[variables('sharedHeader')]"
          },
          "instrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-appinsights', variables('uniqueName')))).outputs.instrumentationKey.value]"
          },
          "funcZipDeploy": {
            "value": "[parameters('funcZipDeploy')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "9868255159746267073"
            }
          },
          "parameters": {
            "uniqueName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "instrumentationKey": {
              "type": "string"
            },
            "sharedHeader": {
              "type": "string"
            },
            "cosmosDBName": {
              "type": "string"
            },
            "funcZipDeploy": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "condition": "[not(empty(trim(parameters('funcZipDeploy'))))]",
              "type": "Microsoft.Web/sites/extensions",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('uniqueName'), 'MSDeploy')]",
              "properties": {
                "packageUri": "[parameters('funcZipDeploy')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('uniqueName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[toLower(substring(parameters('uniqueName'), 0, min(24, length(parameters('uniqueName')))))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "name": "[parameters('uniqueName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "sku": {
                "name": "Y1"
              },
              "properties": {}
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-12-01",
              "name": "[parameters('uniqueName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('uniqueName'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', toLower(substring(parameters('uniqueName'), 0, min(24, length(parameters('uniqueName'))))), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(substring(parameters('uniqueName'), 0, min(24, length(parameters('uniqueName')))))), '2021-04-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', toLower(substring(parameters('uniqueName'), 0, min(24, length(parameters('uniqueName'))))), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(substring(parameters('uniqueName'), 0, min(24, length(parameters('uniqueName')))))), '2021-04-01').keys[0].value)]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('instrumentationKey')]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[format('InstrumentationKey={0}', parameters('instrumentationKey'))]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "CosmosDB",
                      "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDBName')), '2021-11-15-preview').connectionStrings[0].connectionString]"
                    }
                  ],
                  "ipSecurityRestrictions": [
                    {
                      "name": "AllowApim",
                      "priority": 100,
                      "action": "Allow",
                      "tag": "ServiceTag",
                      "ipAddress": "[format('AzureCloud.{0}', replace(parameters('location'), ' ', ''))]",
                      "headers": {
                        "x-azure-fdid": [
                          "[parameters('sharedHeader')]"
                        ]
                      }
                    }
                  ]
                },
                "httpsOnly": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('uniqueName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', toLower(substring(parameters('uniqueName'), 0, min(24, length(parameters('uniqueName'))))))]"
              ]
            }
          ],
          "outputs": {
            "functionAppName": {
              "type": "string",
              "value": "[parameters('uniqueName')]"
            },
            "functionAppID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('uniqueName'))]"
            },
            "functionAppUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('uniqueName'))).defaultHostName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-appinsights', variables('uniqueName')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-cosmosdb', variables('uniqueName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-functionapp-key', variables('uniqueName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "functionAppName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functionapp', variables('uniqueName')))).outputs.functionAppName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "8079518340772506858"
            }
          },
          "parameters": {
            "functionAppName": {
              "type": "string"
            },
            "keyName": {
              "type": "string",
              "defaultValue": "apimanagement"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/host/functionKeys",
              "apiVersion": "2018-11-01",
              "name": "[format('{0}/default/{1}', parameters('functionAppName'), parameters('keyName'))]",
              "properties": {}
            }
          ],
          "outputs": {
            "functionAppKeyName": {
              "type": "string",
              "value": "[parameters('keyName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-functionapp', variables('uniqueName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-apim', variables('uniqueName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "uniqueName": {
            "value": "[variables('uniqueName')]"
          },
          "email": {
            "value": "[parameters('email')]"
          },
          "functionAppID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functionapp', variables('uniqueName')))).outputs.functionAppID.value]"
          },
          "functionAppKeyName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functionapp-key', variables('uniqueName')))).outputs.functionAppKeyName.value]"
          },
          "functionAppUrl": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functionapp', variables('uniqueName')))).outputs.functionAppUrl.value]"
          },
          "sharedHeader": {
            "value": "[variables('sharedHeader')]"
          },
          "instrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-appinsights', variables('uniqueName')))).outputs.instrumentationKey.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "13424143501072900318"
            }
          },
          "parameters": {
            "uniqueName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "functionAppID": {
              "type": "string"
            },
            "functionAppUrl": {
              "type": "string"
            },
            "functionAppKeyName": {
              "type": "string"
            },
            "instrumentationKey": {
              "type": "string"
            },
            "sharedHeader": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service/apis/policies",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}/{2}', parameters('uniqueName'), 'quoteapi', 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[format('<policies>\r\n<inbound>\r\n  <base />\r\n  <set-backend-service backend-id=\"{0}\" />\r\n  <set-header name=\"Ocp-Apim-Subscription-Key\" exists-action=\"delete\" />\r\n  <set-header name=\"X-Azure-FDID\" exists-action=\"override\">\r\n    <value>{1}</value>\r\n  </set-header>\r\n</inbound>\r\n<backend>\r\n    <base />\r\n</backend>\r\n<outbound>\r\n    <base />\r\n</outbound>\r\n<on-error>\r\n    <base />\r\n</on-error>\r\n</policies>\r\n', 'quoteFunctions', parameters('sharedHeader'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/backends', parameters('uniqueName'), 'quoteFunctions')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('uniqueName'), 'quoteapi')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/schemas",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}/{2}', parameters('uniqueName'), 'quoteapi', 'QuoteSchema')]",
              "properties": {
                "contentType": "application/vnd.oai.openapi.components+json",
                "document": {
                  "components": {
                    "schemas": {
                      "requestQuoteResponse": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "requestedAt": {
                            "type": "string"
                          }
                        }
                      },
                      "queryQuoteResponse": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "requestID": {
                              "type": "string"
                            },
                            "responseID": {
                              "type": "string"
                            },
                            "providerName": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "number"
                            },
                            "providedAt": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('uniqueName'), 'quoteapi')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}/{2}', parameters('uniqueName'), 'quoteapi', 'requestquote')]",
              "properties": {
                "displayName": "Request Quote",
                "method": "post",
                "urlTemplate": "/",
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Success",
                    "representations": [
                      {
                        "contentType": "application/json",
                        "schemaId": "QuoteSchema",
                        "typeName": "requestQuoteResponse"
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('uniqueName'), 'quoteapi')]",
                "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('uniqueName'), 'quoteapi', 'QuoteSchema')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/operations",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}/{2}', parameters('uniqueName'), 'quoteapi', 'queryquote')]",
              "properties": {
                "displayName": "Query Quote",
                "method": "get",
                "urlTemplate": "/{id}",
                "templateParameters": [
                  {
                    "name": "id",
                    "type": "string"
                  }
                ],
                "responses": [
                  {
                    "statusCode": 200,
                    "description": "Success",
                    "representations": [
                      {
                        "contentType": "application/json",
                        "schemaId": "QuoteSchema",
                        "typeName": "queryQuoteResponse"
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('uniqueName'), 'quoteapi')]",
                "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('uniqueName'), 'quoteapi', 'QuoteSchema')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/loggers",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('uniqueName'), 'appinsights')]",
              "properties": {
                "loggerType": "applicationInsights",
                "credentials": {
                  "instrumentationKey": "[parameters('instrumentationKey')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('uniqueName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/namedValues",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('uniqueName'), 'QuoteFunctionsKey')]",
              "properties": {
                "displayName": "QuoteFunctionsKey",
                "secret": true,
                "value": "[listKeys(format('{0}/host/default', parameters('functionAppID')), '2016-08-01').functionKeys[parameters('functionAppKeyName')]]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('uniqueName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/backends",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('uniqueName'), 'quoteFunctions')]",
              "properties": {
                "protocol": "http",
                "url": "[format('https://{0}/api/quote', parameters('functionAppUrl'))]",
                "resourceId": "[format('https://{0}{1}', environment().resourceManager, parameters('functionAppID'))]",
                "description": "quoteFunctions",
                "credentials": {
                  "header": {
                    "x-functions-key": [
                      "[format('{{{{{0}}}}}', 'QuoteFunctionsKey')]"
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('uniqueName'))]",
                "[resourceId('Microsoft.ApiManagement/service/namedValues', parameters('uniqueName'), 'QuoteFunctionsKey')]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('uniqueName'), 'quoteapi')]",
              "properties": {
                "displayName": "Quote API",
                "protocols": [
                  "https"
                ],
                "path": "api/quote",
                "serviceUrl": "",
                "subscriptionRequired": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('uniqueName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2021-08-01",
              "name": "[parameters('uniqueName')]",
              "location": "[parameters('location')]",
              "sku": {
                "capacity": 0,
                "name": "Consumption"
              },
              "properties": {
                "publisherEmail": "[parameters('email')]",
                "publisherName": "[parameters('uniqueName')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-appinsights', variables('uniqueName')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-functionapp', variables('uniqueName')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-functionapp-key', variables('uniqueName')))]"
      ]
    }
  ]
}